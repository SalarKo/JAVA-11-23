{\rtf1\ansi\ansicpg1252\cocoartf2758
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;\f1\fnil\fcharset0 HelveticaNeue-Bold;}
{\colortbl;\red255\green255\blue255;\red22\green25\blue28;\red246\green247\blue249;}
{\*\expandedcolortbl;;\cssrgb\c11373\c12941\c14510;\cssrgb\c97255\c97647\c98039;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sa240\partightenfactor0

\f0\fs30 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Design, implement and test a Java program, that creates a 10x10 grid, where 25% randomly chosen spaces are blocked, and have the program determine if there exists a unblocked route from space (0,0) to space (9,9).
\f1\b \

\f0\b0 Note: you can only move horizontally or vertically - not diagonally.
\f1\b \

\f0\b0 Optional: If an unblocked route exists: print out the the spaces to use to get from (0,0) to (9,9).
\f1\b \
}